version development
# automatically generated using discovery API endpoint sqladmin version v1beta4

# Disk encryption configuration for an instance.
struct DiskEncryptionConfiguration {

  # This is always `sql#diskEncryptionConfiguration`.
  String kind

  # Resource name of KMS key for disk encryption
  String kmsKeyName
}

# Disk encryption status for an instance.
struct DiskEncryptionStatus {

  # This is always `sql#diskEncryptionStatus`.
  String kind

  # KMS key version used to encrypt the Cloud SQL instance resource
  String kmsKeyVersionName
}

# Database instance IP Mapping.
struct IpMapping {

  # The IP address assigned.
  String ipAddress

  # The due time for this IP to be retired in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`. This field is only available when the IP is scheduled to be retired.
  String timeToRetire

  # The type of this IP address. A `PRIMARY` address is a public address that can accept incoming connections. A `PRIVATE` address is a private address that can accept incoming connections. An `OUTGOING` address is the source address of connections originating from the instance, if supported.
  Array[String] type
  # 'SQL_IP_ADDRESS_TYPE_UNSPECIFIED': This is an unknown IP address type.
  # 'PRIMARY': IP address the customer is supposed to connect to. Usually this is the load balancer's IP address
  # 'OUTGOING': Source IP address of the connection a read replica establishes to its external primary instance. This IP address can be allowlisted by the customer in case it has a firewall that filters incoming connection to its on premises primary instance.
  # 'PRIVATE': Private IP used when using private IPs and network peering.
  # 'MIGRATED_1ST_GEN': V1 IP of a migrated instance. We want the user to decommission this IP as soon as the migration is complete. Note: V1 instances with V1 ip addresses will be counted as PRIMARY.
}

# Reference to another Cloud SQL instance.
struct InstanceReference {

  # The name of the Cloud SQL instance being referenced. This does not include the project ID.
  String name

  # The project ID of the Cloud SQL instance being referenced. The default is the same project ID as the instance references it.
  String project

  # The region of the Cloud SQL instance being referenced.
  String region
}

# On-premises instance configuration.
struct OnPremisesConfiguration {

  # PEM representation of the trusted CA's x509 certificate.
  String? caCertificate

  # PEM representation of the replica's x509 certificate.
  String clientCertificate

  # PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate.
  String clientKey

  # The dump file to create the Cloud SQL replica.
  String dumpFilePath

  # The host and port of the on-premises instance in host:port format
  String hostPort

  # This is always `sql#onPremisesConfiguration`.
  String kind

  # The password for connecting to on-premises instance.
  String password

  # The reference to Cloud SQL instance if the source is Cloud SQL.
  InstanceReference sourceInstance

  # The username for connecting to on-premises instance.
  String username
}

# This message wraps up the information written by out-of-disk detection job.
struct SqlOutOfDiskReport {

  # The minimum recommended increase size in GigaBytes This field is consumed by the frontend * Writers: * the proactive database wellness job for OOD. * Readers:
  Int sqlMinRecommendedIncreaseSizeGb

  # This field represents the state generated by the proactive database wellness job for OutOfDisk issues. * Writers: * the proactive database wellness job for OOD. * Readers: * the proactive database wellness job
  Array[String] sqlOutOfDiskState
  # 'SQL_OUT_OF_DISK_STATE_UNSPECIFIED': Unspecified state
  # 'NORMAL': The instance has plenty space on data disk
  # 'SOFT_SHUTDOWN': Data disk is almost used up. It is shutdown to prevent data corruption.
}

# Read-replica configuration specific to MySQL databases.
struct MySqlReplicaConfiguration {

  # PEM representation of the trusted CA's x509 certificate.
  String? caCertificate

  # PEM representation of the replica's x509 certificate.
  String clientCertificate

  # PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate.
  String clientKey

  # Seconds to wait between connect retries. MySQL's default is 60 seconds.
  Int connectRetryInterval

  # Path to a SQL dump file in Google Cloud Storage from which the replica instance is to be created. The URI is in the form gs://bucketName/fileName. Compressed gzip files (.gz) are also supported. Dumps have the binlog co-ordinates from which replication begins. This can be accomplished by setting --master-data to 1 when using mysqldump.
  String dumpFilePath

  # This is always `sql#mysqlReplicaConfiguration`.
  String kind

  # Interval in milliseconds between replication heartbeats.
  String masterHeartbeatPeriod

  # The password for the replication connection.
  String password

  # A list of permissible ciphers to use for SSL encryption.
  String sslCipher

  # The username for the replication connection.
  String username

  # Whether or not to check the primary instance's Common Name value in the certificate that it sends during the SSL handshake.
  Boolean verifyServerCertificate
}

# Read-replica configuration for connecting to the primary instance.
struct ReplicaConfiguration {

  # Specifies if the replica is the failover target. If the field is set to `true` the replica will be designated as a failover replica. In case the primary instance fails, the replica instance will be promoted as the new primary instance. Only one replica can be specified as failover target, and the replica has to be in different zone with the primary instance.
  Boolean failoverTarget

  # This is always `sql#replicaConfiguration`.
  String kind

  # MySQL specific configuration when replicating from a MySQL on-premises primary instance. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named `master.info` in the data directory.
  MySqlReplicaConfiguration mysqlReplicaConfiguration
}

# Any scheduled maintenance for this instance.
struct SqlScheduledMaintenance {

  # 
  Boolean canDefer

  # If the scheduled maintenance can be rescheduled.
  Boolean canReschedule

  # Maintenance cannot be rescheduled to start beyond this deadline.
  String scheduleDeadlineTime

  # The start time of any upcoming scheduled maintenance for this instance.
  String startTime
}

# SslCerts Resource
struct SslCert {

  # PEM representation.
  String cert

  # Serial number, as extracted from the certificate.
  String certSerialNumber

  # User supplied name. Constrained to [a-zA-Z.-_ ]+.
  String commonName

  # The time when the certificate was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
  String createTime

  # The time when the certificate expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
  String expirationTime

  # Name of the database instance.
  String instance

  # This is always `sql#sslCert`.
  String kind

  # The URI of this resource.
  String selfLink

  # Sha1 Fingerprint.
  String sha1Fingerprint
}

# Active Directory configuration, relevant only for Cloud SQL for SQL Server.
struct SqlActiveDirectoryConfig {

  # The name of the domain (e.g., mydomain.com).
  String domain

  # This is always sql#activeDirectoryConfig.
  String kind
}

# We currently only support backup retention by specifying the number of backups we will retain.
struct BackupRetentionSettings {

  # Depending on the value of retention_unit, this is used to determine if a backup needs to be deleted. If retention_unit is 'COUNT', we will retain this many backups.
  Int retainedBackups

  # The unit that 'retained_backups' represents.
  Array[String] retentionUnit
  # 'RETENTION_UNIT_UNSPECIFIED': Backup retention unit is unspecified, will be treated as COUNT.
  # 'COUNT': Retention will be by count, eg. "retain the most recent 7 backups".
}

# Database instance backup configuration.
struct BackupConfiguration {

  # Backup retention settings.
  BackupRetentionSettings backupRetentionSettings

  # (MySQL only) Whether binary log is enabled. If backup configuration is disabled, binarylog must be disabled as well.
  Boolean binaryLogEnabled

  # Whether this configuration is enabled.
  Boolean enabled

  # This is always `sql#backupConfiguration`.
  String kind

  # Location of the backup
  String location

  # (Postgres only) Whether point in time recovery is enabled.
  Boolean pointInTimeRecoveryEnabled

  # Reserved for future use.
  Boolean replicationLogArchivingEnabled

  # Start time for the daily backup configuration in UTC timezone in the 24 hour format - `HH:MM`.
  String startTime

  # The number of days of transaction logs we retain for point in time restore, from 1-7.
  Int transactionLogRetentionDays
}

# Database flags for Cloud SQL instances.
struct DatabaseFlags {

  # The name of the flag. These flags are passed at instance startup, so include both server options and system variables. Flags are specified with underscores, not hyphens. For more information, see [Configuring Database Flags](https://cloud.google.com/sql/docs/mysql/flags) in the Cloud SQL documentation.
  String name

  # The value of the flag. Boolean flags are set to `on` for true and `off` for false. This field must be omitted if the flag doesn't take a value.
  String value
}

# Deny Maintenance Periods. This specifies a date range during when all CSA rollout will be denied.
struct DenyMaintenancePeriod {

  # "deny maintenance period" end date. If the year of the end date is empty, the year of the start date also must be empty. In this case, it means the deny maintenance period recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01
  String endDate

  # "deny maintenance period" start date. If the year of the start date is empty, the year of the end date also must be empty. In this case, it means the deny maintenance period recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01
  String startDate

  # Time in UTC when the "deny maintenance period" starts on start_date and ends on end_date. The time is in format: HH:mm:SS, i.e., 00:00:00
  String time
}

# Insights configuration. This specifies when Cloud SQL Insights feature is enabled and optional configuration.
struct InsightsConfig {

  # Whether Query Insights feature is enabled.
  Boolean queryInsightsEnabled

  # Number of query execution plans captured by Insights per minute for all queries combined. Default is 5.
  Int queryPlansPerMinute

  # Maximum query length stored in bytes. Default value: 1024 bytes. Range: 256-4500 bytes. Query length more than this field value will be truncated to this value. When unset, query length will be the default value. Changing query length will restart the database.
  Int queryStringLength

  # Whether Query Insights will record application tags from query when enabled.
  Boolean recordApplicationTags

  # Whether Query Insights will record client address when enabled.
  Boolean recordClientAddress
}

# An entry for an Access Control list.
struct AclEntry {

  # The time when this access control entry expires in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
  String expirationTime

  # This is always `sql#aclEntry`.
  String kind

  # Optional. A label to identify this entry.
  String? name

  # The allowlisted value for the access control list.
  String value
}

# IP Management configuration.
struct IpConfiguration {

  # The name of the allocated ip range for the private ip CloudSQL instance. For example: "google-managed-services-default". If set, the instance ip will be created in the allocated range. The range name must comply with [RFC 1035](https://tools.ietf.org/html/rfc1035). Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?.`
  String allocatedIpRange

  # The list of external networks that are allowed to connect to the instance using the IP. In 'CIDR' notation, also known as 'slash' notation (for example: `157.197.200.0/24`).
  Array[AclEntry] authorizedNetworks

  # Whether the instance is assigned a public IP address or not.
  Boolean ipv4Enabled

  # The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, `/projects/myProject/global/networks/default`. This setting can be updated, but it cannot be removed after it is set.
  String privateNetwork

  # Whether SSL connections over IP are enforced or not.
  Boolean requireSsl
}

# Preferred location. This specifies where a Cloud SQL instance is located. Note that if the preferred location is not available, the instance will be located as close as possible within the region. Only one location may be specified.
struct LocationPreference {

  # The App Engine application to follow, it must be in the same region as the Cloud SQL instance. WARNING: Changing this might restart the instance.
  String followGaeApplication

  # This is always `sql#locationPreference`.
  String kind

  # The preferred Compute Engine zone for the secondary/failover (for example: us-central1-a, us-central1-b, etc.).
  String secondaryZone

  # The preferred Compute Engine zone (for example: us-central1-a, us-central1-b, etc.). WARNING: Changing this might restart the instance.
  String zone
}

# Maintenance window. This specifies when a Cloud SQL instance is restarted for system maintenance purposes.
struct MaintenanceWindow {

  # day of week (1-7), starting on Monday.
  Int day

  # hour of day - 0 to 23.
  Int hour

  # This is always `sql#maintenanceWindow`.
  String kind

  # Maintenance timing setting: `canary` (Earlier) or `stable` (Later). [Learn more](https://cloud.google.com/sql/docs/mysql/instance-settings#maintenance-timing-2ndgen).
  Array[String] updateTrack
  # 'SQL_UPDATE_TRACK_UNSPECIFIED': This is an unknown maintenance timing preference.
  # 'canary': For instance update that requires a restart, this update track indicates your instance prefer to restart for new version early in maintenance window.
  # 'stable': For instance update that requires a restart, this update track indicates your instance prefer to let Cloud SQL choose the timing of restart (within its Maintenance window, if applicable).
}

# Database instance local user password validation policy
struct PasswordValidationPolicy {

  # The complexity of the password.
  Array[String] complexity
  # 'COMPLEXITY_UNSPECIFIED': Complexity check is not specified.
  # 'COMPLEXITY_DEFAULT': A combination of lowercase, uppercase, numeric, and non-alphanumeric characters.

  # Disallow username as a part of the password.
  Boolean disallowUsernameSubstring

  # Whether the password policy is enabled or not.
  Boolean enablePasswordPolicy

  # Minimum number of characters allowed.
  Int minLength

  # Minimum interval after which the password can be changed. This flag is only supported for PostgresSQL.
  String passwordChangeInterval

  # Number of previous passwords that cannot be reused.
  Int reuseInterval
}

# SQL Server specific audit configuration.
struct SqlServerAuditConfig {

  # The name of the destination bucket (e.g., gs://mybucket).
  String bucket

  # This is always sql#sqlServerAuditConfig
  String kind

  # How long to keep generated audit files.
  String retentionInterval

  # How often to upload generated audit files.
  String uploadInterval
}

# Database instance settings.
struct Settings {

  # The activation policy specifies when the instance is activated; it is applicable only when the instance state is RUNNABLE. Valid values: * `ALWAYS`: The instance is on, and remains so even in the absence of connection requests. * `NEVER`: The instance is off; it is not activated, even if a connection request arrives.
  Array[String] activationPolicy
  # 'SQL_ACTIVATION_POLICY_UNSPECIFIED': Unknown activation plan.
  # 'ALWAYS': The instance is always up and running.
  # 'NEVER': The instance never starts.
  # 'ON_DEMAND': The instance starts upon receiving requests.

  # Active Directory configuration, relevant only for Cloud SQL for SQL Server.
  SqlActiveDirectoryConfig activeDirectoryConfig

  # The App Engine app IDs that can access this instance. (Deprecated) Applied to First Generation instances only.
  Array[String] authorizedGaeApplications

  # Availability type. Potential values: * `ZONAL`: The instance serves data from only one zone. Outages in that zone affect data accessibility. * `REGIONAL`: The instance can serve data from more than one zone in a region (it is highly available)./ For more information, see [Overview of the High Availability Configuration](https://cloud.google.com/sql/docs/mysql/high-availability).
  Array[String] availabilityType
  # 'SQL_AVAILABILITY_TYPE_UNSPECIFIED': This is an unknown Availability type.
  # 'ZONAL': Zonal available instance.
  # 'REGIONAL': Regional available instance.

  # The daily backup configuration for the instance.
  BackupConfiguration backupConfiguration

  # The name of server Instance collation.
  String collation

  # Specifies if connections must use Cloud SQL connectors. Option values include the following: * `NOT_REQUIRED`: Cloud SQL instances can be connected without Cloud SQL Connectors. * `REQUIRED`: Only allow connections that use Cloud SQL Connectors. Note that using REQUIRED disables all existing authorized networks. If this field is not specified when creating a new instance, NOT_REQUIRED is used. If this field is not specified when patching or updating an existing instance, it is left unchanged in the instance.
  Array[String] connectorEnforcement
  # 'CONNECTOR_ENFORCEMENT_UNSPECIFIED': The requirement for Cloud SQL connectors is unknown.
  # 'NOT_REQUIRED': Do not require Cloud SQL connectors.
  # 'REQUIRED': Require all connections to use Cloud SQL connectors, including the Cloud SQL Auth Proxy and Cloud SQL Java, Python, and Go connectors. Note: This disables all existing authorized networks.

  # Configuration specific to read replica instances. Indicates whether database flags for crash-safe replication are enabled. This property was only applicable to First Generation instances.
  Boolean crashSafeReplicationEnabled

  # The size of data disk, in GB. The data disk size minimum is 10GB.
  String dataDiskSizeGb

  # The type of data disk: `PD_SSD` (default) or `PD_HDD`. Not used for First Generation instances.
  Array[String] dataDiskType
  # 'SQL_DATA_DISK_TYPE_UNSPECIFIED': This is an unknown data disk type.
  # 'PD_SSD': An SSD data disk.
  # 'PD_HDD': An HDD data disk.
  # 'OBSOLETE_LOCAL_SSD': This field is deprecated and will be removed from a future version of the API.

  # The database flags passed to the instance at startup.
  Array[DatabaseFlags] databaseFlags

  # Configuration specific to read replica instances. Indicates whether replication is enabled or not. WARNING: Changing this restarts the instance.
  Boolean databaseReplicationEnabled

  # Configuration to protect against accidental instance deletion.
  Boolean deletionProtectionEnabled

  # Deny maintenance periods
  Array[DenyMaintenancePeriod] denyMaintenancePeriods

  # Insights configuration, for now relevant only for Postgres.
  InsightsConfig insightsConfig

  # The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled for Second Generation instances.
  IpConfiguration ipConfiguration

  # This is always `sql#settings`.
  String kind

  # The location preference settings. This allows the instance to be located as near as possible to either an App Engine app or Compute Engine zone for better performance. App Engine co-location was only applicable to First Generation instances.
  LocationPreference locationPreference

  # The maintenance window for this instance. This specifies when the instance can be restarted for maintenance purposes.
  MaintenanceWindow maintenanceWindow

  # The local user password validation policy of the instance.
  PasswordValidationPolicy passwordValidationPolicy

  # The pricing plan for this instance. This can be either `PER_USE` or `PACKAGE`. Only `PER_USE` is supported for Second Generation instances.
  Array[String] pricingPlan
  # 'SQL_PRICING_PLAN_UNSPECIFIED': This is an unknown pricing plan for this instance.
  # 'PACKAGE': The instance is billed at a monthly flat rate.
  # 'PER_USE': The instance is billed per usage.

  # The type of replication this instance uses. This can be either `ASYNCHRONOUS` or `SYNCHRONOUS`. (Deprecated) This property was only applicable to First Generation instances.
  Array[String] replicationType
  # 'SQL_REPLICATION_TYPE_UNSPECIFIED': This is an unknown replication type for a Cloud SQL instance.
  # 'SYNCHRONOUS': The synchronous replication mode for First Generation instances. It is the default value.
  # 'ASYNCHRONOUS': The asynchronous replication mode for First Generation instances. It provides a slight performance gain, but if an outage occurs while this option is set to asynchronous, you can lose up to a few seconds of updates to your data.

  # The version of instance settings. This is a required field for update method to make sure concurrent updates are handled properly. During update, use the most recent settingsVersion value for this instance and do not try to update this value.
  String settingsVersion

  # SQL Server specific audit configuration.
  SqlServerAuditConfig sqlServerAuditConfig

  # Configuration to increase storage size automatically. The default value is true.
  Boolean storageAutoResize

  # The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit.
  String storageAutoResizeLimit

  # The tier (or machine type) for this instance, for example `db-custom-1-3840`. WARNING: Changing this restarts the instance.
  String tier

  # User-provided labels, represented as a dictionary where each label is a single key value pair.
  Map[String, String] userLabels
}

# A Cloud SQL instance resource.
struct DatabaseInstance {

  # List all maintenance versions applicable on the instance
  Array[String] availableMaintenanceVersions

  # The backend type. `SECOND_GEN`: Cloud SQL database instance. `EXTERNAL`: A database server that is not managed by Google. This property is read-only; use the `tier` property in the `settings` object to determine the database type.
  Array[String] backendType
  # 'SQL_BACKEND_TYPE_UNSPECIFIED': This is an unknown backend type for instance.
  # 'FIRST_GEN': V1 speckle instance.
  # 'SECOND_GEN': V2 speckle instance.
  # 'EXTERNAL': On premises instance.

  # Connection name of the Cloud SQL instance used in connection strings.
  String connectionName

  # Output only. The time when the instance was created in [RFC 3339](https://tools.ietf.org/html/rfc3339) format, for example `2012-11-15T16:19:00.094Z`.
  String createTime

  # The current disk usage of the instance in bytes. This property has been deprecated. Use the "cloudsql.googleapis.com/database/disk/bytes_used" metric in Cloud Monitoring API instead. Please see [this announcement](https://groups.google.com/d/msg/google-cloud-sql-announce/I_7-F9EBhT0/BtvFtdFeAgAJ) for details.
  String currentDiskSize

  # Output only. Stores the current database version running on the instance including minor version such as `MYSQL_8_0_18`.
  String databaseInstalledVersion

  # The database engine type and version. The `databaseVersion` field cannot be changed after instance creation.
  Array[String] databaseVersion
  # 'SQL_DATABASE_VERSION_UNSPECIFIED': This is an unknown database version.
  # 'MYSQL_5_1': The database version is MySQL 5.1.
  # 'MYSQL_5_5': The database version is MySQL 5.5.
  # 'MYSQL_5_6': The database version is MySQL 5.6.
  # 'MYSQL_5_7': The database version is MySQL 5.7.
  # 'POSTGRES_9_6': The database version is PostgreSQL 9.6.
  # 'POSTGRES_11': The database version is PostgreSQL 11.
  # 'SQLSERVER_2017_STANDARD': The database version is SQL Server 2017 Standard.
  # 'SQLSERVER_2017_ENTERPRISE': The database version is SQL Server 2017 Enterprise.
  # 'SQLSERVER_2017_EXPRESS': The database version is SQL Server 2017 Express.
  # 'SQLSERVER_2017_WEB': The database version is SQL Server 2017 Web.
  # 'POSTGRES_10': The database version is PostgreSQL 10.
  # 'POSTGRES_12': The database version is PostgreSQL 12.
  # 'MYSQL_8_0': The database version is MySQL 8.
  # 'MYSQL_8_0_18': The database major version is MySQL 8.0 and the minor version is 18.
  # 'MYSQL_8_0_26': The database major version is MySQL 8.0 and the minor version is 26.
  # 'MYSQL_8_0_27': The database major version is MySQL 8.0 and the minor version is 27.
  # 'MYSQL_8_0_28': The database major version is MySQL 8.0 and the minor version is 28.
  # 'MYSQL_8_0_29': The database major version is MySQL 8.0 and the minor version is 29.
  # 'POSTGRES_13': The database version is PostgreSQL 13.
  # 'POSTGRES_14': The database version is PostgreSQL 14.
  # 'SQLSERVER_2019_STANDARD': The database version is SQL Server 2019 Standard.
  # 'SQLSERVER_2019_ENTERPRISE': The database version is SQL Server 2019 Enterprise.
  # 'SQLSERVER_2019_EXPRESS': The database version is SQL Server 2019 Express.
  # 'SQLSERVER_2019_WEB': The database version is SQL Server 2019 Web.

  # Disk encryption configuration specific to an instance.
  DiskEncryptionConfiguration diskEncryptionConfiguration

  # Disk encryption status specific to an instance.
  DiskEncryptionStatus diskEncryptionStatus

  # This field is deprecated and will be removed from a future version of the API. Use the `settings.settingsVersion` field instead.
  String etag

  # The name and status of the failover replica.
  Map[String, String] failoverReplica

  # The Compute Engine zone that the instance is currently serving from. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary zone. WARNING: Changing this might restart the instance.
  String gceZone

  # The instance type.
  Array[String] instanceType
  # 'SQL_INSTANCE_TYPE_UNSPECIFIED': This is an unknown Cloud SQL instance type.
  # 'CLOUD_SQL_INSTANCE': A regular Cloud SQL instance that is not replicating from a primary instance.
  # 'ON_PREMISES_INSTANCE': An instance running on the customer's premises that is not managed by Cloud SQL.
  # 'READ_REPLICA_INSTANCE': A Cloud SQL instance acting as a read-replica.

  # The assigned IP addresses for the instance.
  Array[IpMapping] ipAddresses

  # The IPv6 address assigned to the instance. (Deprecated) This property was applicable only to First Generation instances.
  String ipv6Address

  # This is always `sql#instance`.
  String kind

  # The current software version on the instance.
  String maintenanceVersion

  # The name of the instance which will act as primary in the replication setup.
  String masterInstanceName

  # The maximum disk size of the instance in bytes.
  String maxDiskSize

  # Name of the Cloud SQL instance. This does not include the project ID.
  String name

  # Configuration specific to on-premises instances.
  OnPremisesConfiguration onPremisesConfiguration

  # This field represents the report generated by the proactive database wellness job for OutOfDisk issues. * Writers: * the proactive database wellness job for OOD. * Readers: * the proactive database wellness job
  SqlOutOfDiskReport outOfDiskReport

  # The project ID of the project containing the Cloud SQL instance. The Google apps domain is prefixed if applicable.
  String project

  # The geographical region. Can be: * `us-central` (`FIRST_GEN` instances only) * `us-central1` (`SECOND_GEN` instances only) * `asia-east1` or `europe-west1`. Defaults to `us-central` or `us-central1` depending on the instance type. The region cannot be changed after instance creation.
  String region

  # Configuration specific to failover replicas and read replicas.
  ReplicaConfiguration replicaConfiguration

  # The replicas of the instance.
  Array[String] replicaNames

  # Initial root password. Use only on creation. You must set root passwords before you can connect to PostgreSQL instances.
  String rootPassword

  # The status indicating if instance satisfiesPzs. Reserved for future use.
  Boolean satisfiesPzs

  # The start time of any upcoming scheduled maintenance for this instance.
  SqlScheduledMaintenance scheduledMaintenance

  # The Compute Engine zone that the failover instance is currently serving from for a regional instance. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary/failover zone.
  String secondaryGceZone

  # The URI of this resource.
  String selfLink

  # SSL configuration.
  SslCert serverCaCert

  # The service account email address assigned to the instance. \This property is read-only.
  String serviceAccountEmailAddress

  # The user settings.
  Settings settings

  # The current serving state of the Cloud SQL instance.
  Array[String] state
  # 'SQL_INSTANCE_STATE_UNSPECIFIED': The state of the instance is unknown.
  # 'RUNNABLE': The instance is running, or has been stopped by owner.
  # 'SUSPENDED': The instance is not available, for example due to problems with billing.
  # 'PENDING_DELETE': The instance is being deleted.
  # 'PENDING_CREATE': The instance is being created.
  # 'MAINTENANCE': The instance is down for maintenance.
  # 'FAILED': The creation of the instance failed or a fatal error occurred during maintenance.
  # 'ONLINE_MAINTENANCE': Deprecated

  # If the instance state is SUSPENDED, the reason for the suspension.
  Array[String] suspensionReason
}

